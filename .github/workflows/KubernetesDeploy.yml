name: KubernetesBuildDeploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
env:
  WORKSPACE_PATH: "${{ github.workspace }}"
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Java Maven
      run: |
        java -version
        mvn -version
        echo " $GITHUB_WORKSPACE"
        echo "test"
        echo "${GITHUB_REPOSITORY##*/}"
        
    - name: Build with Maven
      run: mvn clean install
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp.war
        path: ${{ env.WORKSPACE_PATH }}/webapp/target/webapp.war

  Deploy:
    runs-on: self-hosted
    needs: build
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
          name: webapp.war
          path: ./
    - name: deploy to prod
      env:
        version: ${{ github.run_number }}
      run: |
        echo "display artifacts"
        ls -ltr
        pwd
        find -name Dockerfile
        #Build docker image with your war file 
        sudo docker build -t my-tomcat-app:${version} .
        docker images
        echo "load in kind cluster"
        kind load docker-image my-tomcat-app:${version} --name kind
        echo "verify  image"
        #docker exec -it kind-control-plane crictl images | grep my-tomcat-app
        sed -i "s/tag/$version/g" deploy.yml
        kubectl apply -f deploy.yml
        ip=`curl -s http://checkip.amazonaws.com`
        echo "https://${ip}:30080"
        echo "completed"
